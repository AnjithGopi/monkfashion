<%- include('../../partials/adminHeader')-%>

    
      <!-- Include SweetAlert 2 CSS and JS -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
        <style>
            .selected-image {
                width: 100px; /* Adjust the size as needed */
                height: auto;
                margin: 5px;
            }
        </style>



<body>
    <div class="screen-overlay"></div>
<%- include('./aside')-%>


    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i class="material-icons md-search"></i></button>
                    </div>
                    <datalist id="search_terms">
                        <option value="Products">
                        <option value="New orders">
                        <option value="Apple iphone">
                        <option value="Ahmed Hassan">
                    </datalist>
                </form>
            </div>
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i class="material-icons md-apps"></i> </button>
                <ul class="nav">
                    <li class="nav-item">
                        <a class="nav-link btn-icon" href="#">
                            <i class="material-icons md-notifications animation-shake"></i>
                            <span class="badge rounded-pill">3</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i> </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="requestfullscreen nav-link btn-icon"><i class="material-icons md-cast"></i></a>
                    </li>
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownLanguage" aria-expanded="false"><i class="material-icons md-public"></i></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownLanguage">
                            <a class="dropdown-item text-brand" href="#"><img src="/static/admin-assets/imgs/theme/flag-us.png" alt="English">English</a>
                            <a class="dropdown-item" href="#"><img src="/static/admin-assets/imgs/theme/flag-fr.png" alt="Français">Français</a>
                            <a class="dropdown-item" href="#"><img src="/static/admin-assets/imgs/theme/flag-jp.png" alt="Français">日本語</a>
                            <a class="dropdown-item" href="#"><img src="/static/admin-assets/imgs/theme/flag-cn.png" alt="Français">中国人</a>
                        </div>
                    </li>
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount" aria-expanded="false"> <img class="img-xs rounded-circle" src="/static/admin-assets/imgs/people/avatar2.jpg" alt="User"></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                            <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit Profile</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account Settings</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-account_balance_wallet"></i>Wallet</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-receipt"></i>Billing</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-help_outline"></i>Help center</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item text-danger" href="#"><i class="material-icons md-exit_to_app"></i>Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </header>
        <section class="content-main">
            <form method="post" enctype="multipart/form-data">
            <div class="row">

                <div class="col-9">
                    <div class="content-header">
                        <h2 class="content-title">Add New Product</h2>
                        <div>
                            <button type="submit" class="btn btn-md rounded font-sm hover-up" onclick="validateForm()"  >Add Product</button>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Add the details</h4>
                        </div>
                        <div class="card-body">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Product title</label>
                                    <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required oninput="validateField(this)">
                                    <div class="text-danger" id="nameError"></div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Full description</label>
                                    <textarea placeholder="Type here" name="description" class="form-control" rows="4" oninput="validateField(this)" required></textarea>
                                    <div class="text-danger" id="descriptionError"></div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Regular price</label>
                                            <div class="row gx-2">
                                                <input placeholder="$" name="regularPrice" min="0" type="number" class="form-control"oninput="validateField(this)">
                                                <div class="text-danger" id="regularPriceError"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Promotional price</label>
                                            <input placeholder="$" type="number" name="salePrice" min="0" class="form-control" oninput="validateField(this)">
                                            <div class="text-danger" id="salePriceError"></div>
                                        </div>
                                    </div>
                                    <!-- To indicate which sweet alert should work -->
                                    <span hidden id="statusSpan"><%= locals.message ? message : '' %></span>
                                    <div class="col-lg-4">
                                        <label class="form-label">Category</label>
                                        <select class="form-select" name="categories" oninput="validateField(this)">
                                            <% if (categories.length > 0) {
                                                for (let i = 0; i < categories.length; i++) { 
                                                    if (categories[i].isActive) { %>
                                                        <option> <%= categories[i].name %> </option>
                                            <% } 
                                                } 
                                            } else { %> user not found <% } %>
                                        </select>
                                        <div class="text-danger" id="categoriesError"></div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Stock</label>
                                    <input type="number" name="stock" placeholder="" class="form-control" id="product_name" min="0" required oninput="validateField(this)">
                                    <div class="text-danger" id="stockError"></div>
                                </div>
                                <input type="submit" value="Submit" onclick="validateForm()" class="btn btn-md rounded font-sm hover-up">
                           
                           
                        </div>
                    </div> <!-- card end// -->
                   
                    
                     <!-- card end// -->
                </div>
                <div class="col-lg-3">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Media</h4>
                        </div>
                        <div class="card-body">
                            <label for="imageUpload" class="input-upload">
                                <img src="/static/admin-assets/imgs/theme/upload.svg" alt="Upload Image">
                                <input id="imageUpload" class="form-control" name="image" type="file" multiple accept="image/*" required>
                            </label>
                            <div id="selectedImagesContainer"></div>
                            <!-- <input type="file" multiple id="files" /> -->
                                <div id="image-preview-container"></div>
                        </div>
                     
       
                    </div> <!-- card end// -->
                   
                </div>
            </div>
            </form>
        </section> <!-- content-main end// -->
       
    </main>

<!-- Sweet alert Js link  -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>


<script>
    function displaySelectedImages(input) {
        const selectedImagesContainer = document.getElementById('selectedImagesContainer');
        selectedImagesContainer.innerHTML = '';

        for (const file of input.files) {
            const imageElement = document.createElement('img');
            imageElement.src = URL.createObjectURL(file);
            imageElement.alt = file.name;
            imageElement.className = 'selected-image';

            selectedImagesContainer.appendChild(imageElement);
        }
    }
</script>
<script>

function validateField(element) {
        const fieldName = element.name;
        const fieldValue = element.value;
        const errorElement = document.getElementById(`${fieldName}Error`);

        if (!fieldValue.trim()) {
            errorElement.textContent = "This field is required.";
        } else {
            errorElement.textContent = "";

            // Additional validation for sale price greater than regular price
            if (fieldName === "salePrice") {
                const regularPrice = document.querySelector("[name='regularPrice']").value;
                if (parseFloat(fieldValue) > parseFloat(regularPrice)) {
                    errorElement.textContent = "Sale price cannot be greater than regular price.";
                }
            }
            if (fieldName === "regularPrice") {
                const regularPrice = document.querySelector("[name='salePrice']").value;
                if (parseFloat(fieldValue) < parseFloat(regularPrice)) {
                    errorElement.textContent = "Regular Price cannot be greater than regular price.";
                }
            }
        }
}
    function validateForm() {
        const productName = document.querySelector("[name='name']").value;
        const description = document.querySelector("[name='description']").value;
        const regularPrice = document.querySelector("[name='regularPrice']").value;
        const salePrice = document.querySelector("[name='salePrice']").value;
        const category = document.querySelector("[name='categories']").value;
        const stock = document.querySelector("[name='stock']").value;

        // Reset previous warning messages
        resetWarnings();

        // Simple validation, you can add more specific checks as needed
        let isValid = true;

        if (!productName.trim()) {
            displayWarning("[name='name']", "Please enter the product title.");
            isValid = false;
        }

        if (!description.trim()) {
            displayWarning("[name='description']", "Please enter the product description.");
            isValid = false;
        }

        if (!regularPrice.trim()) {
            displayWarning("[name='regularPrice']", "Please enter the regular price.");
            isValid = false;
        }

        if (!salePrice.trim()) {
            displayWarning("[name='salePrice']", "Please enter the promotional price.");
            isValid = false;
        }

        if (!category.trim()) {
            displayWarning("[name='categories']", "Please choose a category.");
            isValid = false;
        }

        if (!stock.trim()) {
            displayWarning("[name='stock']", "Please enter the stock.");
            isValid = false;
        }

        return isValid;
    }

    function displayWarning(selector, message) {
        const element = document.querySelector(selector);
        const warningMessage = document.createElement("div");
        warningMessage.className = "text-danger";
        warningMessage.textContent = message;

        element.parentNode.appendChild(warningMessage);
    }

    function resetWarnings() {
        const warningMessages = document.querySelectorAll(".text-danger");
        warningMessages.forEach(function (warning) {
            warning.parentNode.removeChild(warning);
        });
    }
</script>





<script>
const input = document.getElementById("imageUpload");
const previewContainer = document.getElementById("image-preview-container");

input.addEventListener("change", () => {
  // Clear existing previews
  previewContainer.innerHTML = '';

  // Convert the FileList object to an array
  const fileListArr = Array.from(input.files);

  // Remove the second file from the array
//   fileListArr.splice(1, 1);

  // Create and append img elements and buttons for each file
  fileListArr.forEach((file, index) => {
    const img = document.createElement('img');
    img.src = URL.createObjectURL(file);
    img.alt = file.name;
    img.style.maxWidth = '100px'; // Set a maximum width for preview
    previewContainer.appendChild(img);

    const button = document.createElement('button');
    button.textContent = 'Remove';
    button.addEventListener('click', () => {
      // Remove the corresponding file from the array
      fileListArr.splice(index, 1);
      // Re-render the previews after removing the file
      input.dispatchEvent(new Event('change'));
        // Create a new FileList object
  const newFileList = new DataTransfer();

// Add the remaining files to the new FileList
fileListArr.forEach((file) => {
  newFileList.items.add(file);
});

// Set the new FileList to the input element
input.files = newFileList.files;
    });
    previewContainer.appendChild(button);
  });

  // Log the modified array to the console
  console.log(fileListArr);
});
</script>





 <script>
          
  // Get the value of the span tag
  const spanValue = document.getElementById('statusSpan').innerText;
console.log(spanValue)
// Check if the value is 1
if(locals.errorMessage){
    Swal.fire({
    icon: 'warning',
    title: 'Some error occured',
    // text: errorMessage,
  });
  document.getElementById('statusSpan').innerText = 'none';

}
if(spanValue === '3'){
    Swal.fire({
    icon: 'warning',
    title: 'Some error occured',
    // text: errorMessage,
  });
  document.getElementById('statusSpan').innerText = 'none';

}
if (spanValue === '1') {
  // Trigger SweetAlert
  Swal.fire({
    icon: 'warning',
    title: 'Already Exist',
    text: 'Product Already Exist !',
  });
  document.getElementById('statusSpan').innerText = 'none';


}
// Check if the value is 2
if (spanValue === '2') {
  // Trigger SweetAlert
  Swal.fire({
    icon: 'success',
    title: 'Success',
    text: 'Product added Sucessfully',
  });
  document.getElementById('statusSpan').innerText = 'none';


}


    </script>
   
<%- include('../../partials/adminFooter')-%>
