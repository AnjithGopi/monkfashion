<%- include('../../partials/adminHeader')-%>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

</head>

<body>
    <div class="screen-overlay"></div>
<%- include('./aside')-%>

    
    <main class="main-wrap">
<%- include('../../partials/adminNavbar')-%>
       
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Dashboard </h2>
                    <p>Whole data about your business here</p>
                </div>
                <div>
                    <a href="/admin/dashboard/salesReport" class="btn btn-primary"><i class="text-muted material-icons md-post_add"></i>Create report</a>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-primary-light"><i class="text-primary material-icons md-monetization_on"></i></span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Active Users</h6>
                                <span><%= locals.userCount ? userCount : ""%></span>
                                <span class="text-sm">
                                    Shipping fees are not included
                                </span>
                            </div>
                        </article>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-success-light"><i class="text-success material-icons md-local_shipping"></i></span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Orders</h6> <span><%= locals.orderCount ? orderCount : ""%></span>
                                <span class="text-sm">
                                    Excluding orders in transit
                                </span>
                            </div>
                        </article>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-warning-light"><i class="text-warning material-icons md-qr_code"></i></span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Products</h6> <span><%= locals.productCount ? productCount : ""%></span>
                                <span class="text-sm">
                                    In 19 Categories
                                </span>
                            </div>
                        </article>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-info-light"><i class="text-info material-icons md-shopping_basket"></i></span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Monthly Earning</h6> <span>â‚¹<%= locals.totalAmount ? totalAmount : ""%></span>
                                <span class="text-sm">
                                    Based in your local time.
                                </span>
                            </div>
                        </article>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xl-12 col-lg-12">
                    <div class="card mb-4">
                        <article class="card-body">
                            <h5 class="card-title">Sale statistics</h5>
                            <!-- <canvas id="monthlySalesChart" height="120px"></canvas> -->
                            <canvas id="myChart" height="120px"></canvas>
                        </article>
                    </div>
                    
                    <div class="row">
                        

                        <div class="card mb-4">
                            <article class="card-body">
                                <h5 class="card-title">Monthly Sales</h5>
                                <canvas id="myChart2" height="120px"></canvas>
                            </article>
                        </div>

                    </div>
                </div>
                <div class="col-xl-4 col-lg-12">
                  
                   
                </div>
            </div>
        
           
        </section> <!-- content-main end// -->
       
    </main>

    <script>

function fillMissingMonths(data) {
  const filledData = [];
  const monthSet = new Set(data.map(item => item._id));

  for (let month = 1; month <= 12; month++) {
    const existingData = data.find(item => item._id === month);
    if (existingData) {
      filledData.push(existingData);
    } else {
      filledData.push({ _id: month, total: 0 });
    }
  }

  return filledData;
}

        // Function to fetch monthly orders data
async function fetchMonthlyOrdersData() {
    // Perform the API call to fetch data
    const response = await fetch('/admin/home/chart');
    const data = await response.json();
    return data;
}

// Function to update the chart with new data
async function updateChart() {
    console.log("updateChart Worked")
    try {
        // Fetch the latest monthly orders data
        const chartFetchData = await fetchMonthlyOrdersData();
        // Assuming monthlyOrders is your existing data
const filledMonthlyOrders = fillMissingMonths(chartFetchData.monthlyOrders);
const filledMonthlySales = fillMissingMonths(chartFetchData.monthlySales);
const filledMonthlyUsers = fillMissingMonths(chartFetchData.monthlyUsers);
console.log("1 :",filledMonthlyOrders)
console.log("2 :",filledMonthlySales)
console.log("3 :",filledMonthlyUsers)

// Now use filledMonthlyOrders to update your chart
const months = filledMonthlyOrders.map(item => item._id);
const totalOrdersData = filledMonthlyOrders.map(item => item.total);

const monthsSales = filledMonthlySales.map(item => item._id);
const totalSalesData = filledMonthlySales.map(item => item.total);

const monthsUsers = filledMonthlyUsers.map(item => item._id);
const totalOrdersDataUsers = filledMonthlyUsers.map(item => item.total);

// Assuming chart is the reference to your existing Chart.js chart
const monthlyOrdersDatasetIndex = 1;

// Update the chart's data
chart.data.datasets[0].data = totalOrdersDataUsers;
chart.data.datasets[monthlyOrdersDatasetIndex].data = totalOrdersData;
chart.update(); // Update the chart to reflect the changes
myChart.data.datasets[0].data = totalSalesData;
myChart.update(); // Update the chart to reflect the changes



       

    } catch (error) {
        console.error('Error fetching or updating data:', error);
    }
}

// Check if the chart element exists before creating the chart
if ($('#myChart').length) {
    var ctx = document.getElementById('myChart').getContext('2d');

    // Create the initial chart
    var chart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
            datasets: [
               
                {
                    label: 'Users',
                    tension: 0.3,
                    fill: true,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgb(255, 99, 132)',
                    data: [] // Empty initially
                },
                {
                    label: ' Orders',
                    tension: 0.3,
                    fill: true,
                    backgroundColor: 'rgba(44, 120, 220, 0.2)',
                    borderColor: 'rgba(44, 120, 220)',
                    data: []
                }
            ]
        },
        options: {
            plugins: {
                legend: {
                    labels: {
                        usePointStyle: true,
                    },
                }
            }
        }
    });


     /*Sale statistics Chart*/
    if ($('#myChart2').length) {
        var ctx2= document.getElementById("myChart2");
        var myChart = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
            datasets: [
                {
                    label: "Sales",
                    backgroundColor: "#5897fb",
                    barThickness:10,
                    data: [1,3,4,,5,2,6,7,8,9,11,10,11]
                } 
                
            ]
            },
            options: {
                plugins: {
                    legend: {
                        labels: {
                        usePointStyle: true,
                        },
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    } //end if
    


    // Update the chart every 5 seconds (adjust the interval as needed)
    setTimeout(updateChart, 2000);
}

   </script>
<%- include('../../partials/adminFooter')-%>
