<%-include('../layouts/headerUser')-%>
<%- include('../layouts/mobileHeaderUser')-%>


   
    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="/home" rel="nofollow">Home</a>
                    <span></span> Shop <span></span> Checkout
                </div>
            </div>
        </div>
        <section class="mt-50 mb-50">
            <div class="container">
               
                <div class="ship_detail ml-20">
                    <div class="form-group">
                        <div class="chek-form">
                            <div class="custome-checkbox">
                                <input class="form-check-input" type="checkbox" name="checkbox" id="differentaddress" />
                                <label class="form-check-label label_info" data-bs-toggle="collapse"
                                    data-target="#collapseAddress" href="#collapseAddress"
                                    aria-controls="collapseAddress" for="differentaddress"><span
                                        class="text-success font-size-lg font-weight-bold">Add New
                                        address</span></label>
                            </div>
                        </div>
                    </div>
                    <div id="collapseAddress" class="different_address collapse in ml-10">
                        <form >
                            <div class="">
                                <label for="name">Name :</label>
                                <input type="text" required="" id="name" name="fname" placeholder="First name *" />
                                <span id="error-message-name"  style="color: red; display: none;" ></span>
                            </div>
                            <div class="">
                                <label for="phoneNumber">Phone Number:</label>
                                <input type="tel" id="phone" name="phoneNumber" pattern="[0-9]{10}"
                                    placeholder="Enter your phone number *" required />
                                <span id="error-message-phone"  style="color: red; display: none;" ></span>
                            </div>
                            <div class="">
                                <label for="altphoneNumber">Alternate Number:</label>
                                <input type="tel" id="phone2" name="phone2" pattern="[0-9]{10}"
                                    placeholder="Alternate phone number" />
                                <span id="error-message-phone2"  style="color: red; display: none;" ></span>
                            </div>
                            <div class="">
                                <label for="houseName">House Name</label>
                                <input required="" type="text" name="cname" id="houseName" placeholder="House no / Name" />
                                <span id="error-message-house"  style="color: red; display: none;" ></span>
                            </div>

                            <div class="">
                                <label for="city">City</label>
                                <input required="" type="text" id="city" name="city" placeholder="City / Town *" />
                                <span id="error-message-city"  style="color: red; display: none;" ></span>
                            </div>
                            <div class="">
                                <label for="state">State</label>
                                <input required="" type="text" id="state" name="state" placeholder="State / County *" />
                                <span id="error-message-state"  style="color: red; display: none;" ></span>
                            </div>
                            <div class="">
                                <label for="pincode">Pincode</label>
                                <input required="" type="text" name="pincode" id="pincode" pattern="[0-9]{6}"
                                    placeholder="Postcode / ZIP *" />
                                <span id="error-message-pincode"  style="color: red; display: none;"></span>

                            </div>
                            <div class="">
                                <label for="LandMark">Land Mark</label>
                                <input type="text" name="landMark" id="landMark" placeholder="Add Land mark" />
                                <span id="error-message-landMark"  style="color: red; display: none;"></span>
                            </div>
                            <div class=" ml-10">
                                <span id="error-message-general"  style="color: red; display: none;"></span>
                                <button type="button" class="btn" onclick="validateForm()">
                                    Add new address
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
                <form method="post" id="myForm" action="/home/cart/checkout/placeorder">
                    <div class="row ml-10">
                        <div class="col-md-6">
                            <div class="mb-25">
                                <h4>Billing Details</h4>
                            </div>
                            <% if ( address.length> 0 ) { %> <% for ( let i=0 ; i < address.length ; i++) { %>

                                    <div class="form-check">
                                        <input type="radio" id="address1" name="address" value="<%=i%>"  class="form-check-input"
                                            required <% if (i===0) { %> checked <% } %>>
                                            <label class="form-check-label" for="address1">Address <%=i+1%></label>
                                    </div>
                                    <div class="col-lg-12">
                                        <div class="card">
                                            <div class="card-header">
                                                <h5 class="mb-0">
                                                    <%= address[i].fullName %>
                                                </h5>
                                            </div>
                                            <div class="card-body">
                                                <address>
                                                    <%=address[i].houseName %> &nbsp; <%= address[i].city %>
                                                            <%=address[i].state %> <br />
                                                                <%= address[i].pincode %>
                                                                    <br />
                                                                    <%=address[i].phone %>
                                                </address>
                                                <% if( address[i].landMark) { %>
                                                    <p>
                                                        <%= address[i].landMark %>
                                                    </p>
                                                    <% } %>
                                            </div>
                                        </div>
                                    </div>
                                    <% } } else { %>
                                        <p>No address saved add new address</p>
                                        <% } %>

                                          

                                            
                        </div>
                        <div class="col-md-6">
                           
                            <div class="order_review">
                                <div class="mb-20">
                                    <h4>Your Orders</h4>
                                </div>
                                <div class="table-responsive order_table text-center">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th colspan="2">Product</th>
                                                <th>Price</th>
                                                <th>Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% if(cartData[0].product.length > 0) { %>
                                                 <% for(let i=0; i < cartData[0].product.length; i++) { %>

                                                    <tr>
                                                        <td class="image product-thumbnail">
                                                            <img src="/static/admin/images/product/<%= cartData[0].product[i].productId.image[0]%>"
                                                                alt="#" />
                                                        </td>
                                                        <td>
                                                            <h5>
                                                                <a href="">
                                                                    <%= (cartData[0].product[i].productId.name )%>
                                                                </a>
                                                            </h5>
                                                            <span class="product-qty">x <%=
                                                                    cartData[0].product[i].quantity%></span>
                                                        </td>
                                                        <td>
                                                            <%= cartData[0].product[i].productId.salePrice%>
                                                        </td>
                                                        <td>
                                                            <span id="totalAmount_">
                                                                <%= (cartData[0].product[i].productId.salePrice *
                                                                    cartData[0].product[i].quantity)%>
                                                            </span>
                                                        </td>
                                                    </tr>
                                                    <% } } else { %>
                                                        <p>No Data available</p>
                                                        <% } %>

                                                            <tr>
                                                                <th>SubTotal</th>

                                                                <td class="product-subtotal" colspan="3">
                                                                    <span id="totalCartValue"></span>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <th>Shipping</th>
                                                                <td colspan="3"><em>Free Shipping</em></td>
                                                            </tr>
                                                            <tr>
                                                                <th>Coupon </th>
                                                                <td colspan="3"><span id="couponAmount">0</span></td>
                                                            </tr>
                                                            <tr>
                                                                <th>Total</th>
                                                                <td colspan="3" class="product-subtotal">
                                                                    <span class="font-xl text-brand fw-900"
                                                                        id="checkoutPrice"></span>
                                                                </td>
                                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <a class="" style="background-color: yellowgreen; color: #f7f7f7;"  id="toggleCouponBtn"  onclick="toggleCouponList()">Show/Hide Coupons</a>
<style>
    /* Add CSS styles for better coupon presentation */
    .available-coupons ul {
        list-style-type: none;
        padding: 0;
    }

    .available-coupons li {
        border: 1px solid #ccc;
        margin: 10px 0;
        padding: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .coupon-details {
        flex: 1;
    }

    .coupon-name {
        font-weight: bold;
    }

    .coupon-code {
        font-style: italic;
        color: #888;
    }
</style>

<div class="available-coupons" id="couponList" style="display: none;">
    <h5>Available Coupons:</h5>
    <ul>
        <% coupon.forEach((coupon) => { %>
            <li>
                <div class="coupon-details">
                    <div class="coupon-name"><%= coupon.name %></div>
                    <div class="coupon-code">Code: <%= coupon.code %></div>
                </div>
                <button class="btn btn-primary" id="coupon_<%= coupon._id %>" onclick="applyCoupon('<%= coupon.code %>')">Apply</button>
            </li>
        <% }) %>
    </ul>
</div>

                                <div class="panel-body">
                                    <p class="mb-30 font-sm">
                                        <h4>If you have a coupon code, please apply it below.</h4>
                                    </p>
                                   
                                        <div class="form-group">
                                            <input type="text" placeholder="Enter Coupon Code..." id="couponCode"/>
                                        </div>
                                        <div class="form-group">
                                           <a class="btn  mr-10 mb-sm-15" id="applyCouponBtn" onclick="applyCoupon()" ></i>Apply Coupon</a>
                                           <a class="btn  mr-10 mb-sm-15 bg-danger" id="removeCouponBtn" style="display: none;" onclick="removeCoupon()" ></i>Remove Coupon</a>
                                        </div>
                                </div>
                                <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                                <div class="payment_method">
                                    <div class="mb-25">
                                        <h5>Payment</h5>
                                    </div>
                                    <div class="payment_option">
                                        <div class="custome-radio">
                                            <input class="form-check-input" required="" type="radio"
                                                name="payment_option" value="Cash On Delivery" id="exampleRadios3" checked="" />
                                            <label class="form-check-label" for="exampleRadios3"
                                                data-bs-toggle="collapse" data-target="#cash" aria-controls="cash">Cash
                                                on Delivery</label>
                                            <div class="form-group collapse in" id="cash">
                                                <p class="text-muted mt-5">
                                                    There are many variations of passages of Lorem Ipsum
                                                    available, but the majority have suffered alteration.
                                                </p>
                                            </div>
                                        </div>
                                       
                                        <div class="custome-radio">
                                            <input class="form-check-input" required="" type="radio"
                                                name="payment_option" value="Online" id="exampleRadios5"  />
                                            <label class="form-check-label" for="exampleRadios5"
                                                data-bs-toggle="collapse" data-target="#paypal"
                                                aria-controls="paypal">Razorpay</label>
                                            <div class="form-group collapse in" id="paypal">
                                                <p class="text-muted mt-5">
                                                    Pay via PayPal; you can pay with your credit card if you
                                                    don't have a PayPal account.
                                                </p>
                                            </div>
                                        </div>
                                        <div class="custome-radio">
                                            <input class="form-check-input" required="" type="radio"
                                                name="payment_option" value="Wallet" id="exampleRadiosWallet" />
                                            <label class="form-check-label" for="exampleRadiosWallet"
                                                data-bs-toggle="collapse" data-target="#wallet"
                                                aria-controls="wallet">Wallet</label>
                                                <div id="walletBalance" style="display: none;">
                                                    <% if( walletBalance > 0 ) { %>
                                                    <strong>Wallet Balance:</strong> ₹ <span id="walletBalanceAmount"><%= locals.walletBalance ? walletBalance : 0  %></span>
                                                    <%} else {%>
                                                        <p class="text-danger">Insufficent Balance</p>
                                                        <span id="walletBalanceAmount" hidden><%= locals.walletBalance ? walletBalance : 0  %>
                                                        <%}%>
                                                </div>
                                        </div>
                                    </div>
                                </div>
                                <input type="button" onclick="checkQuantity()" class="btn btn-fill-out btn-block mt-30" value="Place Order" />
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </section>
    </main>
    <%-include('../layouts/footerUser')-%>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
         function toggleCouponList() {
            event.preventDefault();
            var couponList = document.getElementById('couponList');
            couponList.style.display = (couponList.style.display === 'none' || couponList.style.display === '') ? 'block' : 'none';
        }
       
    // JavaScript to show/hide wallet balance based on selection
    const walletRadio = document.getElementById('exampleRadiosWallet');
    const walletBalance = document.getElementById('walletBalance');

    walletRadio.addEventListener('change', function () {
        console.log("Wallet change worked")
        if (walletRadio.checked) {
            walletBalance.style.display = 'block';
        } else {
            walletBalance.style.display = 'none';
        }
    });

    </script>
    <script>
       

         function applyCoupon(couponValue){
            event.preventDefault();

            console.log("apply coupon received");
            const couponId = document.getElementById('couponCode').value || couponValue
              const subtotal = document.getElementById("totalCartValue").innerText ;
            console.log(subtotal)

// document.getElementById("checkoutPrice").innerText = total.toFixed(2);

            fetch('/home/cart/checkout/applyCoupon',{
                method:"post",
                headers:{ "Content-Type":'application/json' 
                },
                body: JSON.stringify({
                    couponId:couponId,
                    totalAmount:subtotal  
                })
            }).then(response => response.json())
            .then((data=>{
                if(data.success){
                    console.log("Success ")
                    console.log(data)
                    toastr.success(data.successMessage)
                    document.getElementById("checkoutPrice").innerText = data.amountAfterApplyingCoupon
                    document.getElementById("couponAmount").innerText = data.couponAmount
                    document.getElementById('applyCouponBtn').style.display = 'none';
                    document.getElementById('removeCouponBtn').style.display = 'inline-block';
                }else{
                    console.log("not Success ")
                    toastr.warning(data.warningMessage)
                    console.log(data)
                }
            }))
        }
        function removeCoupon(){
            console.log("click")
             // Update UI to show the "Apply Coupon" button and hide the "Remove Coupon" button
                document.getElementById('applyCouponBtn').style.display = 'inline-block';
                document.getElementById('removeCouponBtn').style.display = 'none';

               let couponAmount =  document.getElementById("couponAmount").innerText 
               document.getElementById("couponAmount").innerText  = '';
            //    document.getElementById("checkoutPrice").innerText = 
            updateTotal();


        }
    </script>

    <script>

      function checkQuantity(){

        fetch('/order/checkQuantityInCart',{
            method:'get'
        }).then(response=>response.json())
        .then((data)=>{
            console.log(data)
            if(data.success){
                placeOrder()
            }else{
                toastr.error(data.message)
            }
        })
        .catch(error => {
                console.error('Checking quantity:', error);
            });
      } 

        // Script to Place ORder
     function placeOrder() {
       
        const paymentForm = document.getElementById('myForm');
        const totalCartValue = document.getElementById('totalCartValue').innerText;
        const appliedCouponAmount = document.getElementById('couponAmount').innerText;
        console.log("subtotal::",totalCartValue)

        // Find the selected radio button
        const selectedRadioButtonPayment = paymentForm.querySelector('input[name="payment_option"]:checked');
        const selectedRadioButtonAddress = paymentForm.querySelector('input[name="address"]:checked');


        // Check if a radio button is selected
        if (selectedRadioButtonPayment && selectedRadioButtonAddress) {
            const selectedValuePayment = selectedRadioButtonPayment.value;
            const selectedValueAddress = selectedRadioButtonAddress.value;
            console.log('Selected Payment Option:', selectedValuePayment);
            console.log('Selected Address:', selectedValueAddress);
            Swal.fire({
                title: 'Placed Order',
                text: 'Are you sure to place the order ?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#088178',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Place Order'
                }).then((result) => {
                if (result.isConfirmed) {
                    // Handle the confirmed action here
                    if( selectedValuePayment == "Online"){
                        paymentRazorpay(selectedValuePayment,selectedValueAddress,totalCartValue-appliedCouponAmount)

                    }else if(selectedValuePayment == "Wallet"){
                        console.log("no ");

                        const walletBalance = document.getElementById('walletBalanceAmount').innerText
                        if(walletBalance > 0 ){
                            console.log("no a");

                            if(walletBalance >= totalCartValue-appliedCouponAmount){
                            let balance = walletBalance-totalCartValue-appliedCouponAmount;
                            // let paymentAmount = 0
                            // paymentRazorpay(selectedValuePayment,selectedValueAddress,paymentAmount)
                            let paymentStatus = "Success"
                            sendOrderToBackend(selectedValuePayment,selectedValueAddress,paymentStatus,totalCartValue-appliedCouponAmount)
                            }else{
                                paymentRazorpay(selectedValuePayment,selectedValueAddress,totalCartValue-appliedCouponAmount-walletBalance,walletBalance)

                            }
                            console.log("wallet balance ",walletBalance)
                        }else{
                            console.log("no b");
                            toastr.warning("Wallet Empty !! Please choose another payment method")
                        }
                        
                    }else{
                        let paymentStatus = "Pending"
                        sendOrderToBackend(selectedValuePayment,selectedValueAddress,paymentStatus)
                    }

                } else {
                    // Handle the canceled action here
                    Swal.fire('Cancelled', 'Order cancelled sucessfully ', 'info');
                }
                });
            
        }else{
            toastr.warning("Select address and Payment method");
        }
    }

    function sendOrderToBackend(paymentMethod,address,paymentStatus,walletAmount=0){
        console.log("wallet Amount :",walletAmount)
        const appliedCouponAmount = document.getElementById('couponAmount').innerText;

        console.log("SEND ORDER BACKEND FUNCTION RECIEVED")

        fetch('/home/cart/checkout/placeorder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    addressIndex: address,
                    paymentMethod: paymentMethod,
                    paymentStatus: paymentStatus,
                    appliedCouponAmount:appliedCouponAmount,
                    appliedWalletAmount : walletAmount
                    
                    
                }),
            })
            .then(response => response.json())
            .then(data => {          
              
                if( data.warningMessage){
                     toastr.warning(data.warningMessage);

                 }
                 if (data.success) {
                    console.log("order send backend Success worked");
                    // alert("Send to backend success")
                    Swal.fire({
                                    title: 'Success',
                                    icon: 'success',
                                    confirmButtonText: 'Close',
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        Swal.close();
                                        // Redirect to the home page
                                        window.location.href = '/home'; // Change this to the actual URL of your home page
                                    }
                                });
                 } else{
                    alert('FAILEDD')
                 }

            })
            .catch(error => {
                console.error('Error updating quantity:', error);
            });
         
        }  
        
        
    function  paymentRazorpay(paymentMethod,address,cartValue,appliedWallet){
        console.log("PAYMENT FUNCTION RECIEVED")
        fetch('/home/cart/checkout/razorpay', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    addressIndex: address,
                    paymentMethod: paymentMethod,
                    cartValue :cartValue
                }),
            })
            .then(response => response.json())
            .then(data => {
                console.log("got the response of...")
                // location.reload();
              
                if( data.warningMessage){
                     toastr.warning(data.warningMessage);

                 }
                 if (data.success) {
                    console.log("Success worked");
                    console.log(data.key_id);
                    console.log(data.orderData);
                    console.log("total amount",data.orderData.totalAmount);
                    console.log(typeof(data.orderData.totalAmount));
                    console.log("order id",data.orderData.id);
                    console.log(typeof(data.orderData.totalAmount));
                                    const amount = JSON.stringify(data.orderData.totalAmount)*100;
                                    console.log(amount)
                                    console.log(typeof(amount))
                                    var options = {
                                        "key":""+data.key_id+"",
                                        "amount":data.totalAmount,
                                        "currency": "INR",
                                        "name": "Monk Fashion",
                                        "description": "Test Transaction",
                                        "image": "/static/asset/images/MONK FASHIONS.png",
                                        "order_id":data.orderData.id,
                                        "handler": function (status) {
                                            // toastr.success("Payment Success");
                                            if (status.razorpay_payment_id) {
                                                // Payment success
                                                toastr.success("Payment Success");
                                        let paymentStatus = "Success"

                                        sendOrderToBackend(paymentMethod,address,paymentStatus,appliedWallet)

                                            
                                            } else {
                                                // Payment failed
                                                toastr.error("Payment Failed");
                                                // alert("Payment failed");
                                            }
                                        },
                                        "prefill": {
                                            "name": "Abhilash V S",
                                            "email": "abhilash@example.com",
                                            "contact": "9000090000"
                                        },
                                        "notes": {
                                            "address": "Razorpay Corporate Office"
                                        },
                                        "theme": {
                                            "color": "#088178"
                                        }
                                    };

                                    var rzp1 = new Razorpay(options);

                                    rzp1.on('payment_failed', function (data) {
                                        alert("Payment failed");
                                    });

                                    rzp1.open();

                        } else{
                            alert('FAILEDD')
                        }

            })
            .catch(error => {
                console.error('Error updating quantity:', error);
            });
    }
       

    </script>
    <script>
        // FUNCTION TO UPDATE THE TOTAL VALUE OF THE CART
        window.onload = () => {
            updateTotal();
        };

        function updateTotal() {
            console.log("worked the total");
            const subtotal = document.querySelectorAll('[id^="totalAmount_"]');

            console.log("subtotal ", subtotal);
            let total = 0;

            subtotal.forEach((element) => {
                total += parseFloat(element.innerText.replace("$", ""));
            });

            document.getElementById("totalCartValue").innerText = total.toFixed(2);
            document.getElementById("checkoutPrice").innerText = total.toFixed(2);
        }
    </script>

<script>
    function validateForm() {
        console.log("validte worked")
        const name = document.getElementById('name').value;
        const phone = document.getElementById('phone').value;
        const phone2 = document.getElementById('phone2').value;
        const house = document.getElementById('houseName').value;
        const city = document.getElementById('city').value;
        const state = document.getElementById('state').value;
        const pincode = document.getElementById('pincode').value;
        const landMark = document.getElementById('landMark').value;

        // Reset error messages
        resetErrorMessages();

        // Check for empty fields
        if (!name || !phone || !phone2 || !house || !city || !state || !pincode) {
          //  preventDefault();
          displayErrorMessage('Please fill all the required fields.', 'error-message-general');

            return;
        }

        // Check for spaces in any field
        if (containsSpace(name)) {
            // preventDefault();
            displayErrorMessage('Name cannot contain spaces.', 'error-message-name');
            return;
        }

        if (containsSpace(phone)) {
            // preventDefault();
            displayErrorMessage('Mobile  cannot contain spaces.', 'error-message-phone');
            return;
        }

        if (containsSpace(phone2)) {
            // preventDefault();
            displayErrorMessage('Mobile Number cannot contain spaces.', 'error-message-phone2');
            return;
        }

       

        if (containsSpace(city)) {
            // preventDefault();
            displayErrorMessage('City cannot contain spaces.', 'error-message-city');
            return;
        }

        if (containsSpace(state)) {
            // preventDefault();
            displayErrorMessage('State cannot contain spaces.', 'error-message-state');
            return;
        }
        if (containsSpace(pincode)) {
            // preventDefault();
            displayErrorMessage('Pincode cannot contain spaces.', 'error-message-pincode');
            return;
        }
       
        submitForm(name,phone,phone2,house,state,city,pincode,landMark)

    }

     // Function to submit the form
     function submitForm(name,phone,phone2,house,state,city,pincode,landMark){
        console.log("Submit form worked")
        
          console.log(name,phone,phone2,house,state,city,pincode,landMark)

          fetch('/addAddress', {
              method: 'post',
              headers: {
                  'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                 name:name,
                 phone:phone,
                 phone2:phone2,
                 house:house,
                 state:state, 
                 city:city,
                 pincode:pincode,
                 landMark:landMark
              }),
          })
          .then(res => res.json())
          .then(data => {
            console.log("Worked 2")
            if(data.warningMessage){
                toastr.warning(data.warningMessage)
              }
              console.log(data);
              if(data.success){
                toastr.success(data.successMessage)
               setTimeout(()=> {window.location.reload()},1000)
              }
          })
          .catch(error => {
              console.error('Fetch error:', error);
          });
      }

    function displayErrorMessage(message, errorMessageId) {
        console.log("display error worked")

        var errorMessageElement = document.getElementById(errorMessageId);
        errorMessageElement.innerHTML = message;
        errorMessageElement.style.color = 'red';
        errorMessageElement.style.display = 'block';

        // Automatically hide the error message after 4 seconds
        setTimeout(function () {
            errorMessageElement.style.display = 'none';
        }, 4000);
    }

    function containsSpace(value) {
        return /\s/.test(value);
    }

   

    function resetErrorMessages() {
        // Reset error messages to hide them initially
        var errorMessages = document.querySelectorAll('[id^="error-message-"]');
        errorMessages.forEach(function (errorMessage) {
            errorMessage.innerHTML = '';
            errorMessage.style.display = 'none';
        });
    }
</script>
  <script>
      // Function to clear the messages thar appeared while validating the form
     function clearMessage(id){
          setTimeout(()=>{
              document.getElementById(id).innerText = ""
          },3000)
      }
  </script>
    <script>
        function validateFormT() {
            // Reset error messages
            document.getElementById("nameError").textContent = "";
            document.getElementById("phoneError").textContent = "";

            // Get form values
            var name = document.forms["addressForm"]["fname"].value;
            var phone = document.forms["addressForm"]["phoneNumber"].value;

            // Validate name
            if (name.trim() === "") {
                document.getElementById("nameError").textContent = "Name is required.";
            }

            // Validate phone number
            if (!/^[0-9]{10}$/.test(phone)) {
                document.getElementById("phoneError").textContent =
                    "Please enter a valid phone number.";
            }

            // Add similar validation for other fields

            // If any error messages are present, prevent form submission
            if (
                document.getElementById("nameError").textContent ||
                document.getElementById("phoneError").textContent
            ) {
                event.preventDefault();
            }
        }
    </script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var applyCouponBtn = document.getElementById("applyCouponBtn");
        var anotherForm = document.getElementById("anotherForm");

        applyCouponBtn.addEventListener("click", function () {
            // Toggle the visibility of the new form
            anotherForm.style.display = (anotherForm.style.display === "none") ? "block" : "none";
        });
    });
</script>

 

