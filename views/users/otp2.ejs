
 
  
  <!DOCTYPE html>
  <html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        @import url("https://fonts.googleapis.com/css2?family=Lato:wght@100;300;400;700&display=swap");
      
        html {
          background-color: rgb(102, 159, 178);
          display: flex;
          justify-content: center;
          align-items: center;
          height: 100vh;
          text-align: center;
          font-family: "Lato", sans-serif;
        }
      
        section {
          display: flex;
          align-items: center;
          flex-direction: column;
          justify-content: space-around;
          width: 40vw;
          min-width: 350px;
          height: 80vh;
          background-color: white;
          border-radius: 12px;
          box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,
            rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;
          padding: 24px 0px;
        }
        svg {
          margin: 16px 0;
        }
        title {
          font-size: 20px;
          font-weight: bold;
        }
      
        p {
          color: #a3a3a3;
          font-size: 14px;
          width: 200px;
          margin-top: 4px;
        }
        input {
          width: 32px;
          height: 32px;
          text-align: center;
          border: none;
          border-bottom: 1.5px solid #d2d2d2;
          margin: 0 10px;
        }
      
        input:focus {
          border-bottom: 1.5px solid deepskyblue;
          outline: none;
        }
      
        button {
          width: 250px;
          letter-spacing: 2px;
          margin-top: 24px;
          padding: 12px 16px;
          border-radius: 8px;
          border: none;
          background-color: #33cdff;
          color: white;
          cursor: pointer;
        }
      </style>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" />

  </head>
  <body>
    <div class=" justify-content-center">
        <section style="height: 25rem; width: 20rem">
          <h3>Enter OTP</h3>
        
          <form action="" method="post">
      
          <p>We have sent a verification code to your Given email</p>
          <div id="inputs">
            <input id="input1" name="otp" type="text" maxLength="1" />
            <input id="input2" name="otp" type="text" maxLength="1" />
            <input id="input3" name="otp" type="text" maxLength="1" />
            <input id="input4" name="otp" type="text" maxLength="1" />
            <input id="input5" name="otp" type="text" maxLength="1" />
            <input id="input6" name="otp" type="text" maxLength="1" />
          </div>
          <div>
            <span id="otpExpire"></span>
            <% if(locals.errorMessage) { %>
            <span class="text-warnning"><%=errorMessage%></span>
            <% }%>
          </div>
          <div>

            <p id="timer">Time remaining: <span id="time">60</span> seconds</p>
           
            <button id="resend-btn" onclick="resendOTP()">Resend OTP</button>
          </div>
          <button type="submit" class="mt-3">Submit</button>
        </form>
        </section>
      </div>
        
        <script>
          const inputs = ["input1", "input2", "input3", "input4","input5","input6"];
        
          inputs.map((id) => {
            const input = document.getElementById(id);
            addListener(input);
          });
        
          function addListener(input) {
            input.addEventListener("keyup", () => {
              const code = parseInt(input.value);
              if (code >= 0 && code <= 9) {
                const n = input.nextElementSibling;
                if (n) n.focus();
              } else {
                input.value = "";
              }
              const key = event.key; // const {key} = event; ES6+
              if (key === "Backspace" || key === "Delete") {
                const prev = input.previousElementSibling;
                if (prev) prev.focus();
              }
            });
          }
          setTimeout(() => {
            document.getElementById('otperr').style.display='none'
          }, 3000);
        </script>

<script>
  let timer;
  let timeLeft = getRemainingTime() || 60; // Initial time in seconds

  setTimeout(()=>{
    fetch(`/clearOtp`, {
            method: 'POST',
        })
        .then(response => {
            console.log('response of clear otp ')
            console.log(response)
            if (response.ok) {
            console.log('ok worked')
               
        // toastr.warning('OTP expired');
        // toastr.warning('heeeeeee');
        // toastr.error('heeeeeee');
        // toastr.info('heeeeeee');
      document.getElementById('otpExpire').innerText = "Otp expired Click on resend otp";         
            } else {
                console.error('Failed to clear otp');
                 toastr.error('Failed to clear otp');
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
  },60000)

  function startTimer() {
      timer = setInterval(function() {
          timeLeft--;
          document.getElementById('time').innerText = timeLeft;

          if (timeLeft === 0) {
              clearInterval(timer);
              document.getElementById('resend-btn').disabled = false;
          }
      }, 1000);
  }

  function resendOTP() {
    location.reload('/home/profile/updateProfile/otp')
    // fetch(`/resendOtp`, {
    //         method: 'POST',
    //     })
    //     .then(response => {
    //         console.log('response of resend  otp ')
    //         console.log(response)
    //         if (response.ok) {
    //         console.log('ok worked')
               
       
        
            
                
    //         } else {
    //             console.error('Failed to resend otp');
    //              toastr.error('Failed to resend otp');
    //         }
    //     })
    //     .catch(error => {
    //         console.error('Error:', error);
    //     });
  
  }

  function getRemainingTime() {
      const storedTimestamp = localStorage.getItem('otpTimestamp');
      if (storedTimestamp) {
          const elapsedTime = Math.floor((Date.now() - storedTimestamp) / 1000);
          return Math.max(60 - elapsedTime, 0); // Ensure time doesn't go negative
      }
      return 0;
  }

  // Start the timer when the page loads
  startTimer();
</script>

 <!-- Add this to the head or before </body> -->
 <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
 

  </body>
  </html>